{"id":"../../node_modules/phaser/src/actions/PropertyValueSet.js","dependencies":[{"name":"C:\\Users\\דור\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561396619369}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Takes an array of Game Objects, or any objects that have a public property as defined in `key`,\r\n * and then sets it to the given value.\r\n *\r\n * The optional `step` property is applied incrementally, multiplied by each item in the array.\r\n *\r\n * To use this with a Group: `PropertyValueSet(group.getChildren(), key, value, step)`\r\n *\r\n * @function Phaser.Actions.PropertyValueSet\r\n * @since 3.3.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - The array of items to be updated by this action.\r\n * @param {string} key - The property to be updated.\r\n * @param {number} value - The amount to set the property to.\r\n * @param {number} [step=0] - This is added to the `value` amount, multiplied by the iteration counter.\r\n * @param {integer} [index=0] - An optional offset to start searching from within the items array.\r\n * @param {integer} [direction=1] - The direction to iterate through the array. 1 is from beginning to end, -1 from end to beginning.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of objects that were passed to this Action.\r\n */\r\nvar PropertyValueSet = function (items, key, value, step, index, direction)\r\n{\r\n    if (step === undefined) { step = 0; }\r\n    if (index === undefined) { index = 0; }\r\n    if (direction === undefined) { direction = 1; }\r\n\r\n    var i;\r\n    var t = 0;\r\n    var end = items.length;\r\n\r\n    if (direction === 1)\r\n    {\r\n        //  Start to End\r\n        for (i = index; i < end; i++)\r\n        {\r\n            items[i][key] = value + (t * step);\r\n            t++;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        //  End to Start\r\n        for (i = index; i >= 0; i--)\r\n        {\r\n            items[i][key] = value + (t * step);\r\n            t++;\r\n        }\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nmodule.exports = PropertyValueSet;\r\n"},"sourceMaps":null,"error":null,"hash":"d8456a5567e75aaa4ce63255aa27911b","cacheData":{"env":{}}}