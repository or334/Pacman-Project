{"id":"../../node_modules/phaser/src/physics/impact/UpdateMotion.js","dependencies":[{"name":"C:\\Users\\דור\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561396619369}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Set up the trace-result\r\n * var res = {\r\n *     collision: {x: false, y: false, slope: false},\r\n *     pos: {x: x, y: y},\r\n *     tile: {x: 0, y: 0}\r\n * };\r\n *\r\n * @function Phaser.Physics.Impact.UpdateMotion\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Impact.Body} body - [description]\r\n * @param {object} res - [description]\r\n */\r\nvar UpdateMotion = function (body, res)\r\n{\r\n    body.standing = false;\r\n\r\n    //  Y\r\n    if (res.collision.y)\r\n    {\r\n        if (body.bounciness > 0 && Math.abs(body.vel.y) > body.minBounceVelocity)\r\n        {\r\n            body.vel.y *= -body.bounciness;\r\n        }\r\n        else\r\n        {\r\n            if (body.vel.y > 0)\r\n            {\r\n                body.standing = true;\r\n            }\r\n\r\n            body.vel.y = 0;\r\n        }\r\n    }\r\n\r\n    //  X\r\n    if (res.collision.x)\r\n    {\r\n        if (body.bounciness > 0 && Math.abs(body.vel.x) > body.minBounceVelocity)\r\n        {\r\n            body.vel.x *= -body.bounciness;\r\n        }\r\n        else\r\n        {\r\n            body.vel.x = 0;\r\n        }\r\n    }\r\n\r\n    //  SLOPE\r\n    if (res.collision.slope)\r\n    {\r\n        var s = res.collision.slope;\r\n       \r\n        if (body.bounciness > 0)\r\n        {\r\n            var proj = body.vel.x * s.nx + body.vel.y * s.ny;\r\n\r\n            body.vel.x = (body.vel.x - s.nx * proj * 2) * body.bounciness;\r\n            body.vel.y = (body.vel.y - s.ny * proj * 2) * body.bounciness;\r\n        }\r\n        else\r\n        {\r\n            var lengthSquared = s.x * s.x + s.y * s.y;\r\n            var dot = (body.vel.x * s.x + body.vel.y * s.y) / lengthSquared;\r\n            \r\n            body.vel.x = s.x * dot;\r\n            body.vel.y = s.y * dot;\r\n            \r\n            var angle = Math.atan2(s.x, s.y);\r\n\r\n            if (angle > body.slopeStanding.min && angle < body.slopeStanding.max)\r\n            {\r\n                body.standing = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    body.pos.x = res.pos.x;\r\n    body.pos.y = res.pos.y;\r\n};\r\n\r\nmodule.exports = UpdateMotion;\r\n"},"sourceMaps":null,"error":null,"hash":"683a5a2afe33958146cde329759e827f","cacheData":{"env":{}}}