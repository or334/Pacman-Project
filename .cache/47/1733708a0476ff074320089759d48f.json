{"id":"../../node_modules/phaser/src/gameobjects/shape/FillPathWebGL.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561134727120},{"name":"../../renderer/webgl/Utils","loc":{"line":7,"column":20},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\gameobjects\\shape\\FillPathWebGL.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\renderer\\webgl\\Utils.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Utils = require('../../renderer/webgl/Utils');\r\n\r\n/**\r\n * Renders a filled path for the given Shape.\r\n *\r\n * @method Phaser.GameObjects.Shape#FillPathWebGL\r\n * @since 3.13.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLPipeline} pipeline - The WebGL Pipeline used to render this Shape.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} calcMatrix - The transform matrix used to get the position values.\r\n * @param {Phaser.GameObjects.Shape} src - The Game Object shape being rendered in this call.\r\n * @param {number} alpha - The base alpha value.\r\n * @param {number} dx - The source displayOriginX.\r\n * @param {number} dy - The source displayOriginY.\r\n */\r\nvar FillPathWebGL = function (pipeline, calcMatrix, src, alpha, dx, dy)\r\n{\r\n    var fillTintColor = Utils.getTintAppendFloatAlphaAndSwap(src.fillColor, src.fillAlpha * alpha);\r\n\r\n    var path = src.pathData;\r\n    var pathIndexes = src.pathIndexes;\r\n\r\n    for (var i = 0; i < pathIndexes.length; i += 3)\r\n    {\r\n        var p0 = pathIndexes[i] * 2;\r\n        var p1 = pathIndexes[i + 1] * 2;\r\n        var p2 = pathIndexes[i + 2] * 2;\r\n\r\n        var x0 = path[p0 + 0] - dx;\r\n        var y0 = path[p0 + 1] - dy;\r\n        var x1 = path[p1 + 0] - dx;\r\n        var y1 = path[p1 + 1] - dy;\r\n        var x2 = path[p2 + 0] - dx;\r\n        var y2 = path[p2 + 1] - dy;\r\n\r\n        var tx0 = calcMatrix.getX(x0, y0);\r\n        var ty0 = calcMatrix.getY(x0, y0);\r\n\r\n        var tx1 = calcMatrix.getX(x1, y1);\r\n        var ty1 = calcMatrix.getY(x1, y1);\r\n\r\n        var tx2 = calcMatrix.getX(x2, y2);\r\n        var ty2 = calcMatrix.getY(x2, y2);\r\n    \r\n        pipeline.setTexture2D();\r\n\r\n        pipeline.batchTri(tx0, ty0, tx1, ty1, tx2, ty2, 0, 0, 1, 1, fillTintColor, fillTintColor, fillTintColor, pipeline.tintEffect);\r\n    }\r\n};\r\n\r\nmodule.exports = FillPathWebGL;\r\n"},"sourceMaps":null,"error":null,"hash":"76a7fe2183ee62acb2a61f57d50e12cb","cacheData":{"env":{}}}