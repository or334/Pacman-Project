{"id":"../../node_modules/phaser/src/dom/GetScreenOrientation.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561134727120},{"name":"../scale/const","loc":{"line":7,"column":20},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\dom\\GetScreenOrientation.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\scale\\const\\index.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar CONST = require('../scale/const');\r\n\r\n/**\r\n * Attempts to determine the screen orientation using the Orientation API.\r\n *\r\n * @function Phaser.DOM.GetScreenOrientation\r\n * @since 3.16.0\r\n *\r\n * @param {number} width - The width of the viewport.\r\n * @param {number} height - The height of the viewport.\r\n *\r\n * @return {string} The orientation.\r\n */\r\nvar GetScreenOrientation = function (width, height)\r\n{\r\n    var screen = window.screen;\r\n    var orientation = (screen) ? screen.orientation || screen.mozOrientation || screen.msOrientation : false;\r\n\r\n    if (orientation && typeof orientation.type === 'string')\r\n    {\r\n        //  Screen Orientation API specification\r\n        return orientation.type;\r\n    }\r\n    else if (typeof orientation === 'string')\r\n    {\r\n        //  moz / ms-orientation are strings\r\n        return orientation;\r\n    }\r\n\r\n    if (screen)\r\n    {\r\n        return (screen.height > screen.width) ? CONST.PORTRAIT : CONST.LANDSCAPE;\r\n    }\r\n    else if (typeof window.orientation === 'number')\r\n    {\r\n        //  This may change by device based on \"natural\" orientation.\r\n        return (window.orientation === 0 || window.orientation === 180) ? CONST.PORTRAIT : CONST.LANDSCAPE;\r\n    }\r\n    else if (window.matchMedia)\r\n    {\r\n        if (window.matchMedia('(orientation: portrait)').matches)\r\n        {\r\n            return CONST.PORTRAIT;\r\n        }\r\n        else if (window.matchMedia('(orientation: landscape)').matches)\r\n        {\r\n            return CONST.LANDSCAPE;\r\n        }\r\n    }\r\n    \r\n    return (height > width) ? CONST.PORTRAIT : CONST.LANDSCAPE;\r\n};\r\n\r\nmodule.exports = GetScreenOrientation;\r\n"},"sourceMaps":null,"error":null,"hash":"2e00b606c7abce64e6679635a56dcda6","cacheData":{"env":{}}}