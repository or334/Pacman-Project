{"id":"../../node_modules/phaser/src/actions/ShiftPosition.js","dependencies":[{"name":"C:\\Users\\דור\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561396619369},{"name":"../math/Vector2","loc":{"line":7,"column":22},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\actions\\ShiftPosition.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\math\\Vector2.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Vector2 = require('../math/Vector2');\r\n\r\n/**\r\n * Iterate through the items array changing the position of each element to be that of the element that came before\r\n * it in the array (or after it if direction = 1)\r\n * \r\n * The first items position is set to x/y.\r\n * \r\n * The final x/y coords are returned\r\n *\r\n * @function Phaser.Actions.ShiftPosition\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items]\r\n * @generic {Phaser.Math.Vector2} O - [output,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {number} x - The x coordinate to place the first item in the array at.\r\n * @param {number} y - The y coordinate to place the first item in the array at.\r\n * @param {integer} [direction=0] - The iteration direction. 0 = first to last and 1 = last to first.\r\n * @param {(Phaser.Math.Vector2|object)} [output] - An optional objec to store the final objects position in.\r\n *\r\n * @return {Phaser.Math.Vector2} The output vector.\r\n */\r\nvar ShiftPosition = function (items, x, y, direction, output)\r\n{\r\n    if (direction === undefined) { direction = 0; }\r\n    if (output === undefined) { output = new Vector2(); }\r\n\r\n    var px;\r\n    var py;\r\n\r\n    if (items.length > 1)\r\n    {\r\n        var i;\r\n        var cx;\r\n        var cy;\r\n        var cur;\r\n\r\n        if (direction === 0)\r\n        {\r\n            //  Bottom to Top\r\n\r\n            var len = items.length - 1;\r\n\r\n            px = items[len].x;\r\n            py = items[len].y;\r\n\r\n            for (i = len - 1; i >= 0; i--)\r\n            {\r\n                //  Current item\r\n                cur = items[i];\r\n\r\n                //  Get current item x/y, to be passed to the next item in the list\r\n                cx = cur.x;\r\n                cy = cur.y;\r\n\r\n                //  Set current item to the previous items x/y\r\n                cur.x = px;\r\n                cur.y = py;\r\n\r\n                //  Set current as previous\r\n                px = cx;\r\n                py = cy;\r\n            }\r\n\r\n            //  Update the head item to the new x/y coordinates\r\n            items[len].x = x;\r\n            items[len].y = y;\r\n        }\r\n        else\r\n        {\r\n            //  Top to Bottom\r\n\r\n            px = items[0].x;\r\n            py = items[0].y;\r\n\r\n            for (i = 1; i < items.length; i++)\r\n            {\r\n                //  Current item\r\n                cur = items[i];\r\n\r\n                //  Get current item x/y, to be passed to the next item in the list\r\n                cx = cur.x;\r\n                cy = cur.y;\r\n\r\n                //  Set current item to the previous items x/y\r\n                cur.x = px;\r\n                cur.y = py;\r\n\r\n                //  Set current as previous\r\n                px = cx;\r\n                py = cy;\r\n            }\r\n\r\n            //  Update the head item to the new x/y coordinates\r\n            items[0].x = x;\r\n            items[0].y = y;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        px = items[0].x;\r\n        py = items[0].y;\r\n\r\n        items[0].x = x;\r\n        items[0].y = y;\r\n    }\r\n\r\n    //  Return the final set of coordinates as they're effectively lost from the shift and may be needed\r\n\r\n    output.x = px;\r\n    output.y = py;\r\n\r\n    return output;\r\n};\r\n\r\nmodule.exports = ShiftPosition;\r\n"},"sourceMaps":null,"error":null,"hash":"895cd48fe1d6645e1a8208801ce937d1","cacheData":{"env":{}}}