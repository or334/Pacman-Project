{"id":"../../node_modules/phaser/src/geom/circle/GetPoint.js","dependencies":[{"name":"C:\\Users\\דור\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561396619369},{"name":"./CircumferencePoint","loc":{"line":7,"column":33},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\circle\\GetPoint.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\circle\\CircumferencePoint.js"},{"name":"../../math/FromPercent","loc":{"line":8,"column":26},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\circle\\GetPoint.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\math\\FromPercent.js"},{"name":"../../math/const","loc":{"line":9,"column":25},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\circle\\GetPoint.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\math\\const.js"},{"name":"../point/Point","loc":{"line":10,"column":20},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\circle\\GetPoint.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\point\\Point.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar CircumferencePoint = require('./CircumferencePoint');\r\nvar FromPercent = require('../../math/FromPercent');\r\nvar MATH_CONST = require('../../math/const');\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Returns a Point object containing the coordinates of a point on the circumference of the Circle\r\n * based on the given angle normalized to the range 0 to 1. I.e. a value of 0.5 will give the point\r\n * at 180 degrees around the circle.\r\n *\r\n * @function Phaser.Geom.Circle.GetPoint\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Point} O - [out,$return]\r\n *\r\n * @param {Phaser.Geom.Circle} circle - The Circle to get the circumference point on.\r\n * @param {number} position - A value between 0 and 1, where 0 equals 0 degrees, 0.5 equals 180 degrees and 1 equals 360 around the circle.\r\n * @param {(Phaser.Geom.Point|object)} [out] - An object to store the return values in. If not given a Point object will be created.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A Point, or point-like object, containing the coordinates of the point around the circle.\r\n */\r\nvar GetPoint = function (circle, position, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    var angle = FromPercent(position, 0, MATH_CONST.PI2);\r\n\r\n    return CircumferencePoint(circle, angle, out);\r\n};\r\n\r\nmodule.exports = GetPoint;\r\n"},"sourceMaps":null,"error":null,"hash":"688a58b0fdd10e8bd7474c7fc7b361a3","cacheData":{"env":{}}}