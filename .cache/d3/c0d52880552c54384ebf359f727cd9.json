{"id":"../../node_modules/phaser/src/physics/arcade/ArcadeSprite.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561134727120},{"name":"../../utils/Class","loc":{"line":7,"column":20},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\arcade\\ArcadeSprite.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\utils\\Class.js"},{"name":"./components","loc":{"line":8,"column":25},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\arcade\\ArcadeSprite.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\arcade\\components\\index.js"},{"name":"../../gameobjects/sprite/Sprite","loc":{"line":9,"column":21},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\arcade\\ArcadeSprite.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\gameobjects\\sprite\\Sprite.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar Class = require('../../utils/Class');\nvar Components = require('./components');\nvar Sprite = require('../../gameobjects/sprite/Sprite');\n\n/**\n * @classdesc\n * An Arcade Physics Sprite is a Sprite with an Arcade Physics body and related components.\n * The body can be dynamic or static.\n *\n * The main difference between an Arcade Sprite and an Arcade Image is that you cannot animate an Arcade Image.\n * If you do not require animation then you can safely use Arcade Images instead of Arcade Sprites.\n *\n * @class Sprite\n * @extends Phaser.GameObjects.Sprite\n * @memberof Phaser.Physics.Arcade\n * @constructor\n * @since 3.0.0\n *\n * @extends Phaser.Physics.Arcade.Components.Acceleration\n * @extends Phaser.Physics.Arcade.Components.Angular\n * @extends Phaser.Physics.Arcade.Components.Bounce\n * @extends Phaser.Physics.Arcade.Components.Debug\n * @extends Phaser.Physics.Arcade.Components.Drag\n * @extends Phaser.Physics.Arcade.Components.Enable\n * @extends Phaser.Physics.Arcade.Components.Friction\n * @extends Phaser.Physics.Arcade.Components.Gravity\n * @extends Phaser.Physics.Arcade.Components.Immovable\n * @extends Phaser.Physics.Arcade.Components.Mass\n * @extends Phaser.Physics.Arcade.Components.Size\n * @extends Phaser.Physics.Arcade.Components.Velocity\n * @extends Phaser.GameObjects.Components.Alpha\n * @extends Phaser.GameObjects.Components.BlendMode\n * @extends Phaser.GameObjects.Components.Depth\n * @extends Phaser.GameObjects.Components.Flip\n * @extends Phaser.GameObjects.Components.GetBounds\n * @extends Phaser.GameObjects.Components.Origin\n * @extends Phaser.GameObjects.Components.Pipeline\n * @extends Phaser.GameObjects.Components.ScrollFactor\n * @extends Phaser.GameObjects.Components.Size\n * @extends Phaser.GameObjects.Components.Texture\n * @extends Phaser.GameObjects.Components.Tint\n * @extends Phaser.GameObjects.Components.Transform\n * @extends Phaser.GameObjects.Components.Visible\n *\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\n * @param {number} x - The horizontal position of this Game Object in the world.\n * @param {number} y - The vertical position of this Game Object in the world.\n * @param {string} texture - The key of the Texture this Game Object will use to render with, as stored in the Texture Manager.\n * @param {(string|integer)} [frame] - An optional frame from the Texture this Game Object is rendering with.\n */\nvar ArcadeSprite = new Class({\n\n    Extends: Sprite,\n\n    Mixins: [\n        Components.Acceleration,\n        Components.Angular,\n        Components.Bounce,\n        Components.Debug,\n        Components.Drag,\n        Components.Enable,\n        Components.Friction,\n        Components.Gravity,\n        Components.Immovable,\n        Components.Mass,\n        Components.Size,\n        Components.Velocity\n    ],\n\n    initialize:\n\n    function ArcadeSprite (scene, x, y, texture, frame)\n    {\n        Sprite.call(this, scene, x, y, texture, frame);\n\n        /**\n         * This Game Object's Physics Body.\n         *\n         * @name Phaser.Physics.Arcade.Sprite#body\n         * @type {?(Phaser.Physics.Arcade.Body|Phaser.Physics.Arcade.StaticBody)}\n         * @default null\n         * @since 3.0.0\n         */\n        this.body = null;\n    }\n\n});\n\nmodule.exports = ArcadeSprite;\n"},"sourceMaps":null,"error":null,"hash":"9e63ed29d0a273861cefb2ff3e65ab92","cacheData":{"env":{}}}