{"id":"../../node_modules/phaser/src/actions/SmoothStep.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561134727120},{"name":"../math/SmoothStep","loc":{"line":7,"column":29},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\actions\\SmoothStep.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\math\\SmoothStep.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar MathSmoothStep = require('../math/SmoothStep');\r\n\r\n/**\r\n * Smoothstep is a sigmoid-like interpolation and clamping function.\r\n * \r\n * The function depends on three parameters, the input x, the \"left edge\" and the \"right edge\", with the left edge being assumed smaller than the right edge. The function receives a real number x as an argument and returns 0 if x is less than or equal to the left edge, 1 if x is greater than or equal to the right edge, and smoothly interpolates, using a Hermite polynomial, between 0 and 1 otherwise. The slope of the smoothstep function is zero at both edges. This is convenient for creating a sequence of transitions using smoothstep to interpolate each segment as an alternative to using more sophisticated or expensive interpolation techniques.\r\n *\r\n * @function Phaser.Actions.SmoothStep\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {string} property - The property of the Game Object to interpolate.\r\n * @param {number} min - The minimum interpolation value.\r\n * @param {number} max - The maximum interpolation value.\r\n * @param {boolean} [inc=false] - Should the values be incremented? `true` or set (`false`)\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that was passed to this Action.\r\n */\r\nvar SmoothStep = function (items, property, min, max, inc)\r\n{\r\n    if (inc === undefined) { inc = false; }\r\n\r\n    var step = Math.abs(max - min) / items.length;\r\n    var i;\r\n\r\n    if (inc)\r\n    {\r\n        for (i = 0; i < items.length; i++)\r\n        {\r\n            items[i][property] += MathSmoothStep(i * step, min, max);\r\n        }\r\n    }\r\n    else\r\n    {\r\n        for (i = 0; i < items.length; i++)\r\n        {\r\n            items[i][property] = MathSmoothStep(i * step, min, max);\r\n        }\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nmodule.exports = SmoothStep;\r\n"},"sourceMaps":null,"error":null,"hash":"63c764edada04e335a8477bb2d811b8b","cacheData":{"env":{}}}