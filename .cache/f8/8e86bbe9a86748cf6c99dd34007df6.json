{"id":"../../node_modules/phaser/src/gameobjects/shape/triangle/Triangle.js","dependencies":[{"name":"C:\\Users\\דור\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561396619369},{"name":"../../../utils/Class","loc":{"line":7,"column":20},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\gameobjects\\shape\\triangle\\Triangle.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\utils\\Class.js"},{"name":"../Shape","loc":{"line":8,"column":20},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\gameobjects\\shape\\triangle\\Triangle.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\gameobjects\\shape\\Shape.js"},{"name":"../../../geom/triangle/Triangle","loc":{"line":9,"column":27},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\gameobjects\\shape\\triangle\\Triangle.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\triangle\\Triangle.js"},{"name":"./TriangleRender","loc":{"line":10,"column":29},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\gameobjects\\shape\\triangle\\Triangle.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\gameobjects\\shape\\triangle\\TriangleRender.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../../utils/Class');\r\nvar Shape = require('../Shape');\r\nvar GeomTriangle = require('../../../geom/triangle/Triangle');\r\nvar TriangleRender = require('./TriangleRender');\r\n\r\n/**\r\n * @classdesc\r\n * The Triangle Shape is a Game Object that can be added to a Scene, Group or Container. You can\r\n * treat it like any other Game Object in your game, such as tweening it, scaling it, or enabling\r\n * it for input or physics. It provides a quick and easy way for you to render this shape in your\r\n * game without using a texture, while still taking advantage of being fully batched in WebGL.\r\n * \r\n * This shape supports both fill and stroke colors.\r\n * \r\n * The Triangle consists of 3 lines, joining up to form a triangular shape. You can control the\r\n * position of each point of these lines. The triangle is always closed and cannot have an open\r\n * face. If you require that, consider using a Polygon instead.\r\n *\r\n * @class Triangle\r\n * @extends Phaser.GameObjects.Shape\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @since 3.13.0\r\n *\r\n * @param {Phaser.Scene} scene - The Scene to which this Game Object belongs. A Game Object can only belong to one Scene at a time.\r\n * @param {number} [x=0] - The horizontal position of this Game Object in the world.\r\n * @param {number} [y=0] - The vertical position of this Game Object in the world.\r\n * @param {number} [x1=0] - The horizontal position of the first point in the triangle.\r\n * @param {number} [y1=128] - The vertical position of the first point in the triangle.\r\n * @param {number} [x2=64] - The horizontal position of the second point in the triangle.\r\n * @param {number} [y2=0] - The vertical position of the second point in the triangle.\r\n * @param {number} [x3=128] - The horizontal position of the third point in the triangle.\r\n * @param {number} [y3=128] - The vertical position of the third point in the triangle.\r\n * @param {number} [fillColor] - The color the triangle will be filled with, i.e. 0xff0000 for red.\r\n * @param {number} [fillAlpha] - The alpha the triangle will be filled with. You can also set the alpha of the overall Shape using its `alpha` property.\r\n */\r\nvar Triangle = new Class({\r\n\r\n    Extends: Shape,\r\n\r\n    Mixins: [\r\n        TriangleRender\r\n    ],\r\n\r\n    initialize:\r\n\r\n    function Triangle (scene, x, y, x1, y1, x2, y2, x3, y3, fillColor, fillAlpha)\r\n    {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = 0; }\r\n        if (x1 === undefined) { x1 = 0; }\r\n        if (y1 === undefined) { y1 = 128; }\r\n        if (x2 === undefined) { x2 = 64; }\r\n        if (y2 === undefined) { y2 = 0; }\r\n        if (x3 === undefined) { x3 = 128; }\r\n        if (y3 === undefined) { y3 = 128; }\r\n\r\n        Shape.call(this, scene, 'Triangle', new GeomTriangle(x1, y1, x2, y2, x3, y3));\r\n\r\n        var width = this.geom.right - this.geom.left;\r\n        var height = this.geom.bottom - this.geom.top;\r\n\r\n        this.setPosition(x, y);\r\n        this.setSize(width, height);\r\n\r\n        if (fillColor !== undefined)\r\n        {\r\n            this.setFillStyle(fillColor, fillAlpha);\r\n        }\r\n\r\n        this.updateDisplayOrigin();\r\n        this.updateData();\r\n    },\r\n\r\n    /**\r\n     * Sets the data for the lines that make up this Triangle shape.\r\n     *\r\n     * @method Phaser.GameObjects.Triangle#setTo\r\n     * @since 3.13.0\r\n     *\r\n     * @param {number} [x1=0] - The horizontal position of the first point in the triangle.\r\n     * @param {number} [y1=0] - The vertical position of the first point in the triangle.\r\n     * @param {number} [x2=0] - The horizontal position of the second point in the triangle.\r\n     * @param {number} [y2=0] - The vertical position of the second point in the triangle.\r\n     * @param {number} [x3=0] - The horizontal position of the third point in the triangle.\r\n     * @param {number} [y3=0] - The vertical position of the third point in the triangle.\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    setTo: function (x1, y1, x2, y2, x3, y3)\r\n    {\r\n        this.geom.setTo(x1, y1, x2, y2, x3, y3);\r\n\r\n        return this.updateData();\r\n    },\r\n\r\n    /**\r\n     * Internal method that updates the data and path values.\r\n     *\r\n     * @method Phaser.GameObjects.Triangle#updateData\r\n     * @private\r\n     * @since 3.13.0\r\n     *\r\n     * @return {this} This Game Object instance.\r\n     */\r\n    updateData: function ()\r\n    {\r\n        var path = [];\r\n        var tri = this.geom;\r\n        var line = this._tempLine;\r\n\r\n        tri.getLineA(line);\r\n\r\n        path.push(line.x1, line.y1, line.x2, line.y2);\r\n\r\n        tri.getLineB(line);\r\n\r\n        path.push(line.x2, line.y2);\r\n\r\n        tri.getLineC(line);\r\n\r\n        path.push(line.x2, line.y2);\r\n\r\n        this.pathData = path;\r\n\r\n        return this;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Triangle;\r\n"},"sourceMaps":null,"error":null,"hash":"2a94a15e53fdcbf5857478d3d1cc58b3","cacheData":{"env":{}}}