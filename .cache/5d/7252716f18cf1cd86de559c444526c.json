{"id":"../../node_modules/phaser/src/geom/triangle/BuildFromPolygon.js","dependencies":[{"name":"C:\\Users\\דור\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561396619369},{"name":"../polygon/Earcut","loc":{"line":7,"column":21},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\triangle\\BuildFromPolygon.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\polygon\\Earcut.js"},{"name":"./Triangle","loc":{"line":8,"column":23},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\triangle\\BuildFromPolygon.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\triangle\\Triangle.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar EarCut = require('../polygon/Earcut');\r\nvar Triangle = require('./Triangle');\r\n\r\n/**\r\n * [description]\r\n *\r\n * @function Phaser.Geom.Triangle.BuildFromPolygon\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.Geom.Triangle[]} O - [out,$return]\r\n *\r\n * @param {array} data - A flat array of vertice coordinates like [x0,y0, x1,y1, x2,y2, ...]\r\n * @param {array} [holes=null] - An array of hole indices if any (e.g. [5, 8] for a 12-vertice input would mean one hole with vertices 5–7 and another with 8–11).\r\n * @param {number} [scaleX=1] - [description]\r\n * @param {number} [scaleY=1] - [description]\r\n * @param {(array|Phaser.Geom.Triangle[])} [out] - [description]\r\n *\r\n * @return {(array|Phaser.Geom.Triangle[])} [description]\r\n */\r\nvar BuildFromPolygon = function (data, holes, scaleX, scaleY, out)\r\n{\r\n    if (holes === undefined) { holes = null; }\r\n    if (scaleX === undefined) { scaleX = 1; }\r\n    if (scaleY === undefined) { scaleY = 1; }\r\n    if (out === undefined) { out = []; }\r\n\r\n    var tris = EarCut(data, holes);\r\n\r\n    var a;\r\n    var b;\r\n    var c;\r\n\r\n    var x1;\r\n    var y1;\r\n\r\n    var x2;\r\n    var y2;\r\n\r\n    var x3;\r\n    var y3;\r\n\r\n    for (var i = 0; i < tris.length; i += 3)\r\n    {\r\n        a = tris[i];\r\n        b = tris[i + 1];\r\n        c = tris[i + 2];\r\n\r\n        x1 = data[a * 2] * scaleX;\r\n        y1 = data[(a * 2) + 1] * scaleY;\r\n\r\n        x2 = data[b * 2] * scaleX;\r\n        y2 = data[(b * 2) + 1] * scaleY;\r\n\r\n        x3 = data[c * 2] * scaleX;\r\n        y3 = data[(c * 2) + 1] * scaleY;\r\n\r\n        out.push(new Triangle(x1, y1, x2, y2, x3, y3));\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = BuildFromPolygon;\r\n"},"sourceMaps":null,"error":null,"hash":"4b87e56b3942dbdd4f85bfd4ad2db12e","cacheData":{"env":{}}}