{"id":"../../node_modules/phaser/src/physics/arcade/tilemap/ProcessTileCallbacks.js","dependencies":[{"name":"C:\\Users\\דור\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561396619369}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * A function to process the collision callbacks between a single tile and an Arcade Physics enabled Game Object.\n *\n * @function Phaser.Physics.Arcade.Tilemap.ProcessTileCallbacks\n * @since 3.0.0\n *\n * @param {Phaser.Tilemaps.Tile} tile - The Tile to process.\n * @param {Phaser.GameObjects.Sprite} sprite - The Game Object to process with the Tile.\n *\n * @return {boolean} The result of the callback, `true` for further processing, or `false` to skip this pair.\n */\nvar ProcessTileCallbacks = function (tile, sprite)\n{\n    //  Tile callbacks take priority over layer level callbacks\n    if (tile.collisionCallback)\n    {\n        return !tile.collisionCallback.call(tile.collisionCallbackContext, sprite, tile);\n    }\n    else if (tile.layer.callbacks[tile.index])\n    {\n        return !tile.layer.callbacks[tile.index].callback.call(\n            tile.layer.callbacks[tile.index].callbackContext, sprite, tile\n        );\n    }\n\n    return true;\n};\n\nmodule.exports = ProcessTileCallbacks;\n"},"sourceMaps":null,"error":null,"hash":"5357e100ff8a5cd80f14dd2cf5c6f7f9","cacheData":{"env":{}}}