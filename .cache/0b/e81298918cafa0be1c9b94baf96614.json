{"id":"../../node_modules/phaser/src/physics/arcade/events/COLLIDE_EVENT.js","dependencies":[{"name":"C:\\Users\\דור\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561396619369}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * The Arcade Physics World Collide Event.\n * \n * This event is dispatched by an Arcade Physics World instance if two bodies collide _and_ at least\n * one of them has their [onCollide]{@link Phaser.Physics.Arcade.Body#onCollide} property set to `true`.\n * \n * It provides an alternative means to handling collide events rather than using the callback approach.\n * \n * Listen to it from a Scene using: `this.physics.world.on('collide', listener)`.\n * \n * Please note that 'collide' and 'overlap' are two different things in Arcade Physics.\n *\n * @event Phaser.Physics.Arcade.Events#COLLIDE\n * @since 3.0.0\n * \n * @param {Phaser.GameObjects.GameObject} gameObject1 - The first Game Object involved in the collision. This is the parent of `body1`.\n * @param {Phaser.GameObjects.GameObject} gameObject2 - The second Game Object involved in the collision. This is the parent of `body2`.\n * @param {Phaser.Physics.Arcade.Body|Phaser.Physics.Arcade.StaticBody} body1 - The first Physics Body involved in the collision.\n * @param {Phaser.Physics.Arcade.Body|Phaser.Physics.Arcade.StaticBody} body2 - The second Physics Body involved in the collision.\n */\nmodule.exports = 'collide';\n"},"sourceMaps":null,"error":null,"hash":"3610eaf79c084d9a8907aea43a372850","cacheData":{"env":{}}}