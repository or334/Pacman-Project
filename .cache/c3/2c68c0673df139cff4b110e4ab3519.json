{"id":"../../node_modules/phaser/src/tilemaps/parsers/impact/ParseWeltmeister.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561134727120},{"name":"../../Formats","loc":{"line":7,"column":22},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\tilemaps\\parsers\\impact\\ParseWeltmeister.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\tilemaps\\Formats.js"},{"name":"../../mapdata/MapData","loc":{"line":8,"column":22},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\tilemaps\\parsers\\impact\\ParseWeltmeister.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\tilemaps\\mapdata\\MapData.js"},{"name":"./ParseTileLayers","loc":{"line":9,"column":30},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\tilemaps\\parsers\\impact\\ParseWeltmeister.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\tilemaps\\parsers\\impact\\ParseTileLayers.js"},{"name":"./ParseTilesets","loc":{"line":10,"column":28},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\tilemaps\\parsers\\impact\\ParseWeltmeister.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\tilemaps\\parsers\\impact\\ParseTilesets.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Formats = require('../../Formats');\r\nvar MapData = require('../../mapdata/MapData');\r\nvar ParseTileLayers = require('./ParseTileLayers');\r\nvar ParseTilesets = require('./ParseTilesets');\r\n\r\n/**\r\n * @namespace Phaser.Tilemaps.Parsers.Impact\r\n */\r\n\r\n/**\r\n * Parses a Weltmeister JSON object into a new MapData object.\r\n *\r\n * @function Phaser.Tilemaps.Parsers.Impact.ParseWeltmeister\r\n * @since 3.0.0\r\n *\r\n * @param {string} name - The name of the tilemap, used to set the name on the MapData.\r\n * @param {object} json - The Weltmeister JSON object.\r\n * @param {boolean} insertNull - Controls how empty tiles, tiles with an index of -1, in the map\r\n * data are handled. If `true`, empty locations will get a value of `null`. If `false`, empty\r\n * location will get a Tile object with an index of -1. If you've a large sparsely populated map and\r\n * the tile data doesn't need to change then setting this value to `true` will help with memory\r\n * consumption. However if your map is small or you need to update the tiles dynamically, then leave\r\n * the default value set.\r\n *\r\n * @return {?object} [description]\r\n */\r\nvar ParseWeltmeister = function (name, json, insertNull)\r\n{\r\n    if (json.layer.length === 0)\r\n    {\r\n        console.warn('No layers found in the Weltmeister map: ' + name);\r\n        return null;\r\n    }\r\n\r\n    var width = 0;\r\n    var height = 0;\r\n\r\n    for (var i = 0; i < json.layer.length; i++)\r\n    {\r\n        if (json.layer[i].width > width) { width = json.layer[i].width; }\r\n        if (json.layer[i].height > height) { height = json.layer[i].height; }\r\n    }\r\n\r\n    var mapData = new MapData({\r\n        width: width,\r\n        height: height,\r\n        name: name,\r\n        tileWidth: json.layer[0].tilesize,\r\n        tileHeight: json.layer[0].tilesize,\r\n        format: Formats.WELTMEISTER\r\n    });\r\n\r\n    mapData.layers = ParseTileLayers(json, insertNull);\r\n    mapData.tilesets = ParseTilesets(json);\r\n\r\n    return mapData;\r\n};\r\n\r\nmodule.exports = ParseWeltmeister;\r\n"},"sourceMaps":null,"error":null,"hash":"a1ace0ed9782b6aad431904abb95f455","cacheData":{"env":{}}}