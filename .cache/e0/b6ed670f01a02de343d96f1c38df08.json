{"id":"../../node_modules/phaser/src/core/VisibilityHandler.js","dependencies":[{"name":"C:\\Users\\דור\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561396619369},{"name":"./events","loc":{"line":7,"column":21},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\core\\VisibilityHandler.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\core\\events\\index.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Events = require('./events');\r\n\r\n/**\r\n * The Visibility Handler is responsible for listening out for document level visibility change events.\r\n * This includes `visibilitychange` if the browser supports it, and blur and focus events. It then uses\r\n * the provided Event Emitter and fires the related events.\r\n *\r\n * @function Phaser.Core.VisibilityHandler\r\n * @fires Phaser.Core.Events#BLUR\r\n * @fires Phaser.Core.Events#FOCUS\r\n * @fires Phaser.Core.Events#HIDDEN\r\n * @fires Phaser.Core.Events#VISIBLE\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Game} game - The Game instance this Visibility Handler is working on.\r\n */\r\nvar VisibilityHandler = function (game)\r\n{\r\n    var hiddenVar;\r\n    var eventEmitter = game.events;\r\n\r\n    if (document.hidden !== undefined)\r\n    {\r\n        hiddenVar = 'visibilitychange';\r\n    }\r\n    else\r\n    {\r\n        var vendors = [ 'webkit', 'moz', 'ms' ];\r\n\r\n        vendors.forEach(function (prefix)\r\n        {\r\n            if (document[prefix + 'Hidden'] !== undefined)\r\n            {\r\n                document.hidden = function ()\r\n                {\r\n                    return document[prefix + 'Hidden'];\r\n                };\r\n\r\n                hiddenVar = prefix + 'visibilitychange';\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    var onChange = function (event)\r\n    {\r\n        if (document.hidden || event.type === 'pause')\r\n        {\r\n            eventEmitter.emit(Events.HIDDEN);\r\n        }\r\n        else\r\n        {\r\n            eventEmitter.emit(Events.VISIBLE);\r\n        }\r\n    };\r\n\r\n    if (hiddenVar)\r\n    {\r\n        document.addEventListener(hiddenVar, onChange, false);\r\n    }\r\n\r\n    window.onblur = function ()\r\n    {\r\n        eventEmitter.emit(Events.BLUR);\r\n    };\r\n\r\n    window.onfocus = function ()\r\n    {\r\n        eventEmitter.emit(Events.FOCUS);\r\n    };\r\n\r\n    //  Automatically give the window focus unless config says otherwise\r\n    if (window.focus && game.config.autoFocus)\r\n    {\r\n        window.focus();\r\n    }\r\n};\r\n\r\nmodule.exports = VisibilityHandler;\r\n"},"sourceMaps":null,"error":null,"hash":"005ec3127f1c517b6b75ce71a7d6016a","cacheData":{"env":{}}}