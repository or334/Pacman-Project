{"id":"scenes/ScoreScene.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"phaser","loc":{"line":1,"column":19},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\client\\src\\scenes\\ScoreScene.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\phaser.js"},{"name":"../constants","loc":{"line":2,"column":60},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\client\\src\\scenes\\ScoreScene.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\client\\src\\constants.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScoreScene = void 0;\n\nvar _phaser = _interopRequireDefault(require(\"phaser\"));\n\nvar _constants = require(\"../constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar ScoreScene =\n/*#__PURE__*/\nfunction (_Phaser$Scene) {\n  _inherits(ScoreScene, _Phaser$Scene);\n\n  function ScoreScene() {\n    _classCallCheck(this, ScoreScene);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ScoreScene).call(this, {\n      key: 'SCORE_SCENE'\n    }));\n  }\n\n  _createClass(ScoreScene, [{\n    key: \"init\",\n    value: function init(scores) {\n      this.scores = scores;\n    }\n  }, {\n    key: \"preload\",\n    value: function preload() {\n      this.load.image('sky', '../../assets/tilesets/gameover_bg.jpg');\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      this.add.image(8, 0, 'sky');\n      this.livesText = this.add.text(100, 100, this.scores, {\n        font: '20px monospace',\n        fill: '#ffffff'\n      });\n      this.livesText.setOrigin(0.5, 0.5);\n      this.add.existing(this.livesText);\n      this.spacebar = this.input.keyboard.addKey(_phaser.default.Input.Keyboard.KeyCodes.SPACE);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (_phaser.default.Input.Keyboard.JustDown(this.spacebar)) {\n        this.scene.start(_constants.SCENES.GAME);\n      }\n    }\n  }]);\n\n  return ScoreScene;\n}(_phaser.default.Scene);\n\nexports.ScoreScene = ScoreScene;"},"sourceMaps":null,"error":null,"hash":"200beaa923ec02977c69f57e83e73d92","cacheData":{"env":{}}}