{"id":"../../node_modules/phaser/src/gameobjects/lights/Light.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561134727120},{"name":"../../utils/Class","loc":{"line":7,"column":20},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\gameobjects\\lights\\Light.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\utils\\Class.js"},{"name":"../../renderer/webgl/Utils","loc":{"line":8,"column":20},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\gameobjects\\lights\\Light.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\renderer\\webgl\\Utils.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar Utils = require('../../renderer/webgl/Utils');\r\n\r\n/**\r\n * @classdesc\r\n * A 2D point light.\r\n *\r\n * These are typically created by a {@link Phaser.GameObjects.LightsManager}, available from within a scene via `this.lights`.\r\n *\r\n * Any Game Objects using the Light2D pipeline will then be affected by these Lights.\r\n *\r\n * They can also simply be used to represent a point light for your own purposes.\r\n *\r\n * @class Light\r\n * @memberof Phaser.GameObjects\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {number} x - The horizontal position of the light.\r\n * @param {number} y - The vertical position of the light.\r\n * @param {number} radius - The radius of the light.\r\n * @param {number} r - The red color of the light. A value between 0 and 1.\r\n * @param {number} g - The green color of the light. A value between 0 and 1.\r\n * @param {number} b - The blue color of the light. A value between 0 and 1.\r\n * @param {number} intensity - The intensity of the light.\r\n */\r\nvar Light = new Class({\r\n\r\n    initialize:\r\n\r\n    function Light (x, y, radius, r, g, b, intensity)\r\n    {\r\n        /**\r\n         * The horizontal position of the light.\r\n         *\r\n         * @name Phaser.GameObjects.Light#x\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.x = x;\r\n\r\n        /**\r\n         * The vertical position of the light.\r\n         *\r\n         * @name Phaser.GameObjects.Light#y\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.y = y;\r\n\r\n        /**\r\n         * The radius of the light.\r\n         *\r\n         * @name Phaser.GameObjects.Light#radius\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.radius = radius;\r\n\r\n        /**\r\n         * The red color of the light. A value between 0 and 1.\r\n         *\r\n         * @name Phaser.GameObjects.Light#r\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.r = r;\r\n\r\n        /**\r\n         * The green color of the light. A value between 0 and 1.\r\n         *\r\n         * @name Phaser.GameObjects.Light#g\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.g = g;\r\n\r\n        /**\r\n         * The blue color of the light. A value between 0 and 1.\r\n         *\r\n         * @name Phaser.GameObjects.Light#b\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.b = b;\r\n\r\n        /**\r\n         * The intensity of the light.\r\n         *\r\n         * @name Phaser.GameObjects.Light#intensity\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.intensity = intensity;\r\n\r\n        /**\r\n         * The horizontal scroll factor of the light.\r\n         *\r\n         * @name Phaser.GameObjects.Light#scrollFactorX\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.scrollFactorX = 1.0;\r\n\r\n        /**\r\n         * The vertical scroll factor of the light.\r\n         *\r\n         * @name Phaser.GameObjects.Light#scrollFactorY\r\n         * @type {number}\r\n         * @since 3.0.0\r\n         */\r\n        this.scrollFactorY = 1.0;\r\n    },\r\n\r\n    /**\r\n     * Set the properties of the light.\r\n     *\r\n     * Sets both horizontal and vertical scroll factor to 1. Use {@link Phaser.GameObjects.Light#setScrollFactor} to set\r\n     * the scroll factor.\r\n     *\r\n     * @method Phaser.GameObjects.Light#set\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal position of the light.\r\n     * @param {number} y - The vertical position of the light.\r\n     * @param {number} radius - The radius of the light.\r\n     * @param {number} r - The red color. A value between 0 and 1.\r\n     * @param {number} g - The green color. A value between 0 and 1.\r\n     * @param {number} b - The blue color. A value between 0 and 1.\r\n     * @param {number} intensity - The intensity of the light.\r\n     *\r\n     * @return {Phaser.GameObjects.Light} This Light object.\r\n     */\r\n    set: function (x, y, radius, r, g, b, intensity)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        this.radius = radius;\r\n\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n\r\n        this.intensity = intensity;\r\n\r\n        this.scrollFactorX = 1;\r\n        this.scrollFactorY = 1;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the scroll factor of the light.\r\n     *\r\n     * @method Phaser.GameObjects.Light#setScrollFactor\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal scroll factor of the light.\r\n     * @param {number} y - The vertical scroll factor of the light.\r\n     *\r\n     * @return {Phaser.GameObjects.Light} This Light object.\r\n     */\r\n    setScrollFactor: function (x, y)\r\n    {\r\n        if (x === undefined) { x = 1; }\r\n        if (y === undefined) { y = x; }\r\n\r\n        this.scrollFactorX = x;\r\n        this.scrollFactorY = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the color of the light from a single integer RGB value.\r\n     *\r\n     * @method Phaser.GameObjects.Light#setColor\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} rgb - The integer RGB color of the light.\r\n     *\r\n     * @return {Phaser.GameObjects.Light} This Light object.\r\n     */\r\n    setColor: function (rgb)\r\n    {\r\n        var color = Utils.getFloatsFromUintRGB(rgb);\r\n\r\n        this.r = color[0];\r\n        this.g = color[1];\r\n        this.b = color[2];\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the intensity of the light.\r\n     *\r\n     * @method Phaser.GameObjects.Light#setIntensity\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} intensity - The intensity of the light.\r\n     *\r\n     * @return {Phaser.GameObjects.Light} This Light object.\r\n     */\r\n    setIntensity: function (intensity)\r\n    {\r\n        this.intensity = intensity;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the position of the light.\r\n     *\r\n     * @method Phaser.GameObjects.Light#setPosition\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} x - The horizontal position of the light.\r\n     * @param {number} y - The vertical position of the light.\r\n     *\r\n     * @return {Phaser.GameObjects.Light} This Light object.\r\n     */\r\n    setPosition: function (x, y)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Set the radius of the light.\r\n     *\r\n     * @method Phaser.GameObjects.Light#setRadius\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} radius - The radius of the light.\r\n     *\r\n     * @return {Phaser.GameObjects.Light} This Light object.\r\n     */\r\n    setRadius: function (radius)\r\n    {\r\n        this.radius = radius;\r\n\r\n        return this;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Light;\r\n"},"sourceMaps":null,"error":null,"hash":"79178dbba330f10756656d3da5931422","cacheData":{"env":{}}}