{"id":"../../node_modules/phaser/src/actions/Spread.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561134727120}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Takes an array of Game Objects and then modifies their `property` so the value equals, or is incremented, by the\r\n * calculated spread value.\r\n * \r\n * The spread value is derived from the given `min` and `max` values and the total number of items in the array.\r\n * \r\n * For example, to cause an array of Sprites to change in alpha from 0 to 1 you could call:\r\n * \r\n * ```javascript\r\n * Phaser.Actions.Spread(itemsArray, 'alpha', 0, 1);\r\n * ```\r\n *\r\n * @function Phaser.Actions.Spread\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - An array of Game Objects. The contents of this array are updated by this Action.\r\n * @param {string} property - The property of the Game Object to spread.\r\n * @param {number} min - The minimum value.\r\n * @param {number} max - The maximum value.\r\n * @param {boolean} [inc=false] - Should the values be incremented? `true` or set (`false`)\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of Game Objects that were passed to this Action.\r\n */\r\nvar Spread = function (items, property, min, max, inc)\r\n{\r\n    if (inc === undefined) { inc = false; }\r\n\r\n    var step = Math.abs(max - min) / items.length;\r\n    var i;\r\n\r\n    if (inc)\r\n    {\r\n        for (i = 0; i < items.length; i++)\r\n        {\r\n            items[i][property] += i * step + min;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        for (i = 0; i < items.length; i++)\r\n        {\r\n            items[i][property] = i * step + min;\r\n        }\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\nmodule.exports = Spread;\r\n"},"sourceMaps":null,"error":null,"hash":"d1e8647dfd2c7209549f076dfc211a6b","cacheData":{"env":{}}}