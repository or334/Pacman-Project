{"id":"../../node_modules/phaser/src/geom/intersects/GetLineToRectangle.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561134727120},{"name":"../point/Point","loc":{"line":8,"column":20},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\intersects\\GetLineToRectangle.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\point\\Point.js"},{"name":"./LineToLine","loc":{"line":9,"column":25},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\intersects\\GetLineToRectangle.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\intersects\\LineToLine.js"},{"name":"./LineToRectangle","loc":{"line":10,"column":30},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\intersects\\GetLineToRectangle.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\intersects\\LineToRectangle.js"}],"generated":{"js":"/**\r\n * @author       Florian Vazelle\r\n * @author       Geoffrey Glaive\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Point = require('../point/Point');\r\nvar LineToLine = require('./LineToLine');\r\nvar LineToRectangle = require('./LineToRectangle');\r\n\r\n/**\r\n * Checks for intersection between the Line and a Rectangle shape,\r\n * and returns the intersection points as a Point object array.\r\n *\r\n * @function Phaser.Geom.Intersects.GetLineToRectangle\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Line} line - The Line to check for intersection.\r\n * @param {(Phaser.Geom.Rectangle|object)} rect - The Rectangle to check for intersection.\r\n * @param {array} [out] - An optional array in which to store the points of intersection.\r\n *\r\n * @return {array} An array with the points of intersection if objects intersect, otherwise an empty array.\r\n */\r\nvar GetLineToRectangle = function (line, rect, out)\r\n{\r\n    if (out === undefined) { out = []; }\r\n\r\n    if (LineToRectangle(line, rect))\r\n    {\r\n        var lineA = rect.getLineA();\r\n        var lineB = rect.getLineB();\r\n        var lineC = rect.getLineC();\r\n        var lineD = rect.getLineD();\r\n\r\n        var output = [ new Point(), new Point(), new Point(), new Point() ];\r\n\r\n        var result = [\r\n            LineToLine(lineA, line, output[0]),\r\n            LineToLine(lineB, line, output[1]),\r\n            LineToLine(lineC, line, output[2]),\r\n            LineToLine(lineD, line, output[3])\r\n        ];\r\n\r\n        for (var i = 0; i < 4; i++)\r\n        {\r\n            if (result[i]) { out.push(output[i]); }\r\n        }\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = GetLineToRectangle;\r\n"},"sourceMaps":null,"error":null,"hash":"57e02900119036e7c1de508617fc8438","cacheData":{"env":{}}}