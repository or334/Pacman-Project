{"id":"../../node_modules/phaser/src/physics/arcade/components/OverlapRect.js","dependencies":[{"name":"C:\\Users\\דור\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561396619369}],"generated":{"js":"/**\r\n * This method will search the given rectangular area and return an array of all physics bodies that\r\n * overlap with it. It can return either Dynamic, Static bodies or a mixture of both.\r\n * \r\n * A body only has to intersect with the search area to be considered, it doesn't have to be fully\r\n * contained within it.\r\n * \r\n * If Arcade Physics is set to use the RTree (which it is by default) then the search for is extremely fast,\r\n * otherwise the search is O(N) for Dynamic Bodies.\r\n *\r\n * @function Phaser.Physics.Arcade.Components.OverlapRect\r\n * @since 3.17.0\r\n *\r\n * @param {number} x - The top-left x coordinate of the area to search within.\r\n * @param {number} y - The top-left y coordinate of the area to search within.\r\n * @param {number} width - The width of the area to search within.\r\n * @param {number} height - The height of the area to search within.\r\n * @param {boolean} [includeDynamic=true] - Should the search include Dynamic Bodies?\r\n * @param {boolean} [includeStatic=false] - Should the search include Static Bodies?\r\n *\r\n * @return {(Phaser.Physics.Arcade.Body[]|Phaser.Physics.Arcade.StaticBody[])} An array of bodies that overlap with the given area.\r\n */\r\nvar OverlapRect = function (world, x, y, width, height, includeDynamic, includeStatic)\r\n{\r\n    if (includeDynamic === undefined) { includeDynamic = true; }\r\n    if (includeStatic === undefined) { includeStatic = false; }\r\n\r\n    var dynamicBodies = [];\r\n    var staticBodies = [];\r\n\r\n    var minMax = world.treeMinMax;\r\n\r\n    minMax.minX = x;\r\n    minMax.minY = y;\r\n    minMax.maxX = x + width;\r\n    minMax.maxY = y + height;\r\n\r\n    if (includeStatic)\r\n    {\r\n        staticBodies = world.staticTree.search(minMax);\r\n    }\r\n\r\n    if (includeDynamic && world.useTree)\r\n    {\r\n        dynamicBodies = world.tree.search(minMax);\r\n    }\r\n    else if (includeDynamic)\r\n    {\r\n        var bodies = world.bodies;\r\n\r\n        var fakeBody =\r\n        {\r\n            position: {\r\n                x: x,\r\n                y: y\r\n            },\r\n            left: x,\r\n            top: y,\r\n            right: x + width,\r\n            bottom: y + height,\r\n            isCircle: false\r\n        };\r\n\r\n        var intersects = world.intersects;\r\n\r\n        bodies.iterate(function (target)\r\n        {\r\n            if (intersects(target, fakeBody))\r\n            {\r\n                dynamicBodies.push(target);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    return staticBodies.concat(dynamicBodies);\r\n};\r\n\r\nmodule.exports = OverlapRect;\r\n"},"sourceMaps":null,"error":null,"hash":"da4358683f46152ab10b3844491402ac","cacheData":{"env":{}}}