{"id":"../../node_modules/phaser/src/physics/arcade/tilemap/TileCheckX.js","dependencies":[{"name":"C:\\Users\\דור\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561396619369},{"name":"./ProcessTileSeparationX","loc":{"line":7,"column":37},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\arcade\\tilemap\\TileCheckX.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\arcade\\tilemap\\ProcessTileSeparationX.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar ProcessTileSeparationX = require('./ProcessTileSeparationX');\n\n/**\n * Check the body against the given tile on the X axis.\n * Used internally by the SeparateTile function.\n *\n * @function Phaser.Physics.Arcade.Tilemap.TileCheckX\n * @since 3.0.0\n *\n * @param {Phaser.Physics.Arcade.Body} body - The Body object to separate.\n * @param {Phaser.Tilemaps.Tile} tile - The tile to check.\n * @param {number} tileLeft - The left position of the tile within the tile world.\n * @param {number} tileRight - The right position of the tile within the tile world.\n * @param {number} tileBias - The tile bias value. Populated by the `World.TILE_BIAS` constant.\n * @param {boolean} isLayer - Is this check coming from a TilemapLayer or an array of tiles?\n *\n * @return {number} The amount of separation that occurred.\n */\nvar TileCheckX = function (body, tile, tileLeft, tileRight, tileBias, isLayer)\n{\n    var ox = 0;\n\n    var faceLeft = tile.faceLeft;\n    var faceRight = tile.faceRight;\n    var collideLeft = tile.collideLeft;\n    var collideRight = tile.collideRight;\n\n    if (!isLayer)\n    {\n        faceLeft = true;\n        faceRight = true;\n        collideLeft = true;\n        collideRight = true;\n    }\n\n    if (body.deltaX() < 0 && !body.blocked.left && collideRight && body.checkCollision.left)\n    {\n        //  Body is moving LEFT\n        if (faceRight && body.x < tileRight)\n        {\n            ox = body.x - tileRight;\n\n            if (ox < -tileBias)\n            {\n                ox = 0;\n            }\n        }\n    }\n    else if (body.deltaX() > 0 && !body.blocked.right && collideLeft && body.checkCollision.right)\n    {\n        //  Body is moving RIGHT\n        if (faceLeft && body.right > tileLeft)\n        {\n            ox = body.right - tileLeft;\n\n            if (ox > tileBias)\n            {\n                ox = 0;\n            }\n        }\n    }\n\n    if (ox !== 0)\n    {\n        if (body.customSeparateX)\n        {\n            body.overlapX = ox;\n        }\n        else\n        {\n            ProcessTileSeparationX(body, ox);\n        }\n    }\n\n    return ox;\n};\n\nmodule.exports = TileCheckX;\n"},"sourceMaps":null,"error":null,"hash":"5e4a0b30ebdda446b2396d0dd707ef85","cacheData":{"env":{}}}