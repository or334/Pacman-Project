{"id":"../../node_modules/phaser/src/textures/parsers/SpriteSheetFromAtlas.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561134727120},{"name":"../../utils/object/GetFastValue","loc":{"line":7,"column":27},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\textures\\parsers\\SpriteSheetFromAtlas.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\utils\\object\\GetFastValue.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\n\r\n/**\r\n * Parses a Sprite Sheet and adds the Frames to the Texture, where the Sprite Sheet is stored as a frame within an Atlas.\r\n *\r\n * In Phaser terminology a Sprite Sheet is a texture containing different frames, but each frame is the exact\r\n * same size and cannot be trimmed or rotated.\r\n *\r\n * @function Phaser.Textures.Parsers.SpriteSheetFromAtlas\r\n * @memberof Phaser.Textures.Parsers\r\n * @private\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Textures.Texture} texture - The Texture to add the Frames to.\r\n * @param {Phaser.Textures.Frame} frame - The Frame that contains the Sprite Sheet.\r\n * @param {object} config - An object describing how to parse the Sprite Sheet.\r\n * @param {number} config.frameWidth - Width in pixels of a single frame in the sprite sheet.\r\n * @param {number} [config.frameHeight] - Height in pixels of a single frame in the sprite sheet. Defaults to frameWidth if not provided.\r\n * @param {number} [config.startFrame=0] - Index of the start frame in the sprite sheet\r\n * @param {number} [config.endFrame=-1] - Index of the end frame in the sprite sheet. -1 mean all the rest of the frames\r\n * @param {number} [config.margin=0] - If the frames have been drawn with a margin, specify the amount here.\r\n * @param {number} [config.spacing=0] - If the frames have been drawn with spacing between them, specify the amount here.\r\n *\r\n * @return {Phaser.Textures.Texture} The Texture modified by this parser.\r\n */\r\nvar SpriteSheetFromAtlas = function (texture, frame, config)\r\n{\r\n    var frameWidth = GetFastValue(config, 'frameWidth', null);\r\n    var frameHeight = GetFastValue(config, 'frameHeight', frameWidth);\r\n\r\n    //  If missing we can't proceed\r\n    if (!frameWidth)\r\n    {\r\n        throw new Error('TextureManager.SpriteSheetFromAtlas: Invalid frameWidth given.');\r\n    }\r\n\r\n    //  Add in a __BASE entry (for the entire atlas frame)\r\n    var source = texture.source[0];\r\n    texture.add('__BASE', 0, 0, 0, source.width, source.height);\r\n\r\n    var startFrame = GetFastValue(config, 'startFrame', 0);\r\n    var endFrame = GetFastValue(config, 'endFrame', -1);\r\n    var margin = GetFastValue(config, 'margin', 0);\r\n    var spacing = GetFastValue(config, 'spacing', 0);\r\n\r\n    var x = frame.cutX;\r\n    var y = frame.cutY;\r\n\r\n    var cutWidth = frame.cutWidth;\r\n    var cutHeight = frame.cutHeight;\r\n    var sheetWidth = frame.realWidth;\r\n    var sheetHeight = frame.realHeight;\r\n\r\n    var row = Math.floor((sheetWidth - margin + spacing) / (frameWidth + spacing));\r\n    var column = Math.floor((sheetHeight - margin + spacing) / (frameHeight + spacing));\r\n    var total = row * column;\r\n\r\n    //  trim offsets\r\n\r\n    var leftPad = frame.x;\r\n    var leftWidth = frameWidth - leftPad;\r\n\r\n    var rightWidth = frameWidth - ((sheetWidth - cutWidth) - leftPad);\r\n\r\n    var topPad = frame.y;\r\n    var topHeight = frameHeight - topPad;\r\n\r\n    var bottomHeight = frameHeight - ((sheetHeight - cutHeight) - topPad);\r\n\r\n    if (startFrame > total || startFrame < -total)\r\n    {\r\n        startFrame = 0;\r\n    }\r\n\r\n    if (startFrame < 0)\r\n    {\r\n        //  Allow negative skipframes.\r\n        startFrame = total + startFrame;\r\n    }\r\n\r\n    if (endFrame !== -1)\r\n    {\r\n        total = startFrame + (endFrame + 1);\r\n    }\r\n\r\n    var sheetFrame;\r\n    var frameX = margin;\r\n    var frameY = margin;\r\n    var frameIndex = 0;\r\n    var sourceIndex = frame.sourceIndex;\r\n\r\n    for (var sheetY = 0; sheetY < column; sheetY++)\r\n    {\r\n        var topRow = (sheetY === 0);\r\n        var bottomRow = (sheetY === column - 1);\r\n\r\n        for (var sheetX = 0; sheetX < row; sheetX++)\r\n        {\r\n            var leftRow = (sheetX === 0);\r\n            var rightRow = (sheetX === row - 1);\r\n\r\n            sheetFrame = texture.add(frameIndex, sourceIndex, x + frameX, y + frameY, frameWidth, frameHeight);\r\n\r\n            if (leftRow || topRow || rightRow || bottomRow)\r\n            {\r\n                var destX = (leftRow) ? leftPad : 0;\r\n                var destY = (topRow) ? topPad : 0;\r\n\r\n                var trimWidth = 0;\r\n                var trimHeight = 0;\r\n\r\n                if (leftRow)\r\n                {\r\n                    trimWidth += (frameWidth - leftWidth);\r\n                }\r\n\r\n                if (rightRow)\r\n                {\r\n                    trimWidth += (frameWidth - rightWidth);\r\n                }\r\n\r\n                if (topRow)\r\n                {\r\n                    trimHeight += (frameHeight - topHeight);\r\n                }\r\n\r\n                if (bottomRow)\r\n                {\r\n                    trimHeight += (frameHeight - bottomHeight);\r\n                }\r\n\r\n                var destWidth = frameWidth - trimWidth;\r\n                var destHeight = frameHeight - trimHeight;\r\n\r\n                sheetFrame.cutWidth = destWidth;\r\n                sheetFrame.cutHeight = destHeight;\r\n\r\n                sheetFrame.setTrim(frameWidth, frameHeight, destX, destY, destWidth, destHeight);\r\n            }\r\n\r\n            frameX += spacing;\r\n\r\n            if (leftRow)\r\n            {\r\n                frameX += leftWidth;\r\n            }\r\n            else if (rightRow)\r\n            {\r\n                frameX += rightWidth;\r\n            }\r\n            else\r\n            {\r\n                frameX += frameWidth;\r\n            }\r\n\r\n            frameIndex++;\r\n        }\r\n\r\n        frameX = margin;\r\n        frameY += spacing;\r\n\r\n        if (topRow)\r\n        {\r\n            frameY += topHeight;\r\n        }\r\n        else if (bottomRow)\r\n        {\r\n            frameY += bottomHeight;\r\n        }\r\n        else\r\n        {\r\n            frameY += frameHeight;\r\n        }\r\n    }\r\n\r\n    return texture;\r\n};\r\n\r\nmodule.exports = SpriteSheetFromAtlas;\r\n"},"sourceMaps":null,"error":null,"hash":"4414d492c5aba25258d738a537c0cd17","cacheData":{"env":{}}}