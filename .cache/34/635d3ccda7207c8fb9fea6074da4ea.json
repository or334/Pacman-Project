{"id":"../../node_modules/phaser/src/geom/intersects/TriangleToLine.js","dependencies":[{"name":"C:\\Users\\דור\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561396619369},{"name":"../triangle/Contains","loc":{"line":7,"column":23},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\intersects\\TriangleToLine.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\triangle\\Contains.js"},{"name":"./LineToLine","loc":{"line":8,"column":25},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\intersects\\TriangleToLine.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\geom\\intersects\\LineToLine.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Contains = require('../triangle/Contains');\r\nvar LineToLine = require('./LineToLine');\r\n\r\n/**\r\n * Checks if a Triangle and a Line intersect.\r\n * \r\n * The Line intersects the Triangle if it starts inside of it, ends inside of it, or crosses any of the Triangle's sides. Thus, the Triangle is considered \"solid\".\r\n *\r\n * @function Phaser.Geom.Intersects.TriangleToLine\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Triangle} triangle - The Triangle to check with.\r\n * @param {Phaser.Geom.Line} line - The Line to check with.\r\n *\r\n * @return {boolean} `true` if the Triangle and the Line intersect, otherwise `false`.\r\n */\r\nvar TriangleToLine = function (triangle, line)\r\n{\r\n    //  If the Triangle contains either the start or end point of the line, it intersects\r\n    if (Contains(triangle, line.getPointA()) || Contains(triangle, line.getPointB()))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    //  Now check the line against each line of the Triangle\r\n    if (LineToLine(triangle.getLineA(), line))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    if (LineToLine(triangle.getLineB(), line))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    if (LineToLine(triangle.getLineC(), line))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nmodule.exports = TriangleToLine;\r\n"},"sourceMaps":null,"error":null,"hash":"0ff2b39f0b7b549d8a1a2093c1b7a028","cacheData":{"env":{}}}