{"id":"../../node_modules/phaser/src/physics/impact/Solver.js","dependencies":[{"name":"C:\\Users\\דור\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561396619369},{"name":"./COLLIDES","loc":{"line":7,"column":23},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\impact\\Solver.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\impact\\COLLIDES.js"},{"name":"./events","loc":{"line":8,"column":21},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\impact\\Solver.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\impact\\events\\index.js"},{"name":"./SeparateX","loc":{"line":9,"column":24},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\impact\\Solver.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\impact\\SeparateX.js"},{"name":"./SeparateY","loc":{"line":10,"column":24},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\impact\\Solver.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\impact\\SeparateY.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar COLLIDES = require('./COLLIDES');\r\nvar Events = require('./events');\r\nvar SeparateX = require('./SeparateX');\r\nvar SeparateY = require('./SeparateY');\r\n\r\n/**\r\n * Impact Physics Solver\r\n *\r\n * @function Phaser.Physics.Impact.Solver\r\n * @fires Phaser.Physics.Impact.Events#COLLIDE\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Physics.Impact.World} world - The Impact simulation to run the solver in.\r\n * @param {Phaser.Physics.Impact.Body} bodyA - The first body in the collision.\r\n * @param {Phaser.Physics.Impact.Body} bodyB - The second body in the collision.\r\n */\r\nvar Solver = function (world, bodyA, bodyB)\r\n{\r\n    var weak = null;\r\n\r\n    if (bodyA.collides === COLLIDES.LITE || bodyB.collides === COLLIDES.FIXED)\r\n    {\r\n        weak = bodyA;\r\n    }\r\n    else if (bodyB.collides === COLLIDES.LITE || bodyA.collides === COLLIDES.FIXED)\r\n    {\r\n        weak = bodyB;\r\n    }\r\n\r\n    if (bodyA.last.x + bodyA.size.x > bodyB.last.x && bodyA.last.x < bodyB.last.x + bodyB.size.x)\r\n    {\r\n        if (bodyA.last.y < bodyB.last.y)\r\n        {\r\n            SeparateY(world, bodyA, bodyB, weak);\r\n        }\r\n        else\r\n        {\r\n            SeparateY(world, bodyB, bodyA, weak);\r\n        }\r\n\r\n        bodyA.collideWith(bodyB, 'y');\r\n        bodyB.collideWith(bodyA, 'y');\r\n\r\n        world.emit(Events.COLLIDE, bodyA, bodyB, 'y');\r\n    }\r\n    else if (bodyA.last.y + bodyA.size.y > bodyB.last.y && bodyA.last.y < bodyB.last.y + bodyB.size.y)\r\n    {\r\n        if (bodyA.last.x < bodyB.last.x)\r\n        {\r\n            SeparateX(world, bodyA, bodyB, weak);\r\n        }\r\n        else\r\n        {\r\n            SeparateX(world, bodyB, bodyA, weak);\r\n        }\r\n\r\n        bodyA.collideWith(bodyB, 'x');\r\n        bodyB.collideWith(bodyA, 'x');\r\n\r\n        world.emit(Events.COLLIDE, bodyA, bodyB, 'x');\r\n    }\r\n};\r\n\r\nmodule.exports = Solver;\r\n"},"sourceMaps":null,"error":null,"hash":"18cf3610703100391ba0a3e8a91d0fc5","cacheData":{"env":{}}}