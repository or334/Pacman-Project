{"id":"../../node_modules/phaser/src/tilemaps/dynamiclayer/DynamicTilemapLayerWebGLRenderer.js","dependencies":[{"name":"C:\\Users\\דור\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561396619369},{"name":"../../renderer/webgl/Utils","loc":{"line":7,"column":20},"parent":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayerWebGLRenderer.js","resolved":"C:\\Users\\דור\\Desktop\\pmm\\node_modules\\phaser\\src\\renderer\\webgl\\Utils.js"}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\nvar Utils = require('../../renderer/webgl/Utils');\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.Tilemaps.DynamicTilemapLayer#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.Tilemaps.DynamicTilemapLayer} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n */\r\nvar DynamicTilemapLayerWebGLRenderer = function (renderer, src, interpolationPercentage, camera)\r\n{\r\n    src.cull(camera);\r\n\r\n    var renderTiles = src.culledTiles;\r\n    var tileCount = renderTiles.length;\r\n    var alpha = camera.alpha * src.alpha;\r\n\r\n    if (tileCount === 0 || alpha <= 0)\r\n    {\r\n        return;\r\n    }\r\n\r\n    var gidMap = src.gidMap;\r\n    var pipeline = src.pipeline;\r\n\r\n    var getTint = Utils.getTintAppendFloatAlpha;\r\n\r\n    var scrollFactorX = src.scrollFactorX;\r\n    var scrollFactorY = src.scrollFactorY;\r\n\r\n    var x = src.x;\r\n    var y = src.y;\r\n\r\n    var sx = src.scaleX;\r\n    var sy = src.scaleY;\r\n\r\n    var tilesets = src.tileset;\r\n\r\n    //  Loop through each tileset in this layer, drawing just the tiles that are in that set each time\r\n    //  Doing it this way around allows us to batch tiles using the same tileset\r\n    for (var c = 0; c < tilesets.length; c++)\r\n    {\r\n        var currentSet = tilesets[c];\r\n        var texture = currentSet.glTexture;\r\n\r\n        for (var i = 0; i < tileCount; i++)\r\n        {\r\n            var tile = renderTiles[i];\r\n\r\n            var tileset = gidMap[tile.index];\r\n\r\n            if (tileset !== currentSet)\r\n            {\r\n                //  Skip tiles that aren't in this set\r\n                continue;\r\n            }\r\n       \r\n            var tileTexCoords = tileset.getTileTextureCoordinates(tile.index);\r\n\r\n            if (tileTexCoords === null)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var frameWidth = tile.width;\r\n            var frameHeight = tile.height;\r\n\r\n            var frameX = tileTexCoords.x;\r\n            var frameY = tileTexCoords.y;\r\n\r\n            var tw = tile.width * 0.5;\r\n            var th = tile.height * 0.5;\r\n\r\n            var tint = getTint(tile.tint, alpha * tile.alpha);\r\n\r\n            pipeline.batchTexture(\r\n                src,\r\n                texture,\r\n                texture.width, texture.height,\r\n                x + ((tw + tile.pixelX) * sx), y + ((th + tile.pixelY) * sy),\r\n                tile.width, tile.height,\r\n                sx, sy,\r\n                tile.rotation,\r\n                tile.flipX, tile.flipY,\r\n                scrollFactorX, scrollFactorY,\r\n                tw, th,\r\n                frameX, frameY, frameWidth, frameHeight,\r\n                tint, tint, tint, tint, false,\r\n                0, 0,\r\n                camera,\r\n                null,\r\n                true\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = DynamicTilemapLayerWebGLRenderer;\r\n"},"sourceMaps":null,"error":null,"hash":"ceca5e177dfa8a3af71fcc39e2b3cd0f","cacheData":{"env":{}}}