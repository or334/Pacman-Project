{"id":"../../node_modules/phaser/src/utils/object/SetValue.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561134727120}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\r\n */\r\n\r\n/**\r\n * Sets a value in an object, allowing for dot notation to control the depth of the property.\r\n * \r\n * For example:\r\n * \r\n * ```javascript\r\n * var data = {\r\n *   world: {\r\n *     position: {\r\n *       x: 200,\r\n *       y: 100\r\n *     }\r\n *   }\r\n * };\r\n * \r\n * SetValue(data, 'world.position.y', 300);\r\n * \r\n * console.log(data.world.position.y); // 300\r\n * ```\r\n *\r\n * @function Phaser.Utils.Objects.SetValue\r\n * @since 3.17.0\r\n *\r\n * @param {object} source - The object to set the value in.\r\n * @param {string} key - The name of the property in the object. If a property is nested, the names of its preceding properties should be separated by a dot (`.`)\r\n * @param {any} value - The value to set into the property, if found in the source object.\r\n *\r\n * @return {boolean} `true` if the property key was valid and the value was set, otherwise `false`.\r\n */\r\nvar SetValue = function (source, key, value)\r\n{\r\n    if (!source || typeof source === 'number')\r\n    {\r\n        return false;\r\n    }\r\n    else if (source.hasOwnProperty(key))\r\n    {\r\n        source[key] = value;\r\n\r\n        return true;\r\n    }\r\n    else if (key.indexOf('.') !== -1)\r\n    {\r\n        var keys = key.split('.');\r\n        var parent = source;\r\n        var prev = source;\r\n\r\n        //  Use for loop here so we can break early\r\n        for (var i = 0; i < keys.length; i++)\r\n        {\r\n            if (parent.hasOwnProperty(keys[i]))\r\n            {\r\n                //  Yes it has a key property, let's carry on down\r\n                prev = parent;\r\n                parent = parent[keys[i]];\r\n            }\r\n            else\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        prev[keys[keys.length - 1]] = value;\r\n\r\n        return true;\r\n    }\r\n    \r\n    return false;\r\n};\r\n\r\nmodule.exports = SetValue;\r\n"},"sourceMaps":null,"error":null,"hash":"59f5f1d2e2945fbc1c6012be48641992","cacheData":{"env":{}}}