{"id":"../../node_modules/phaser/src/physics/arcade/tilemap/TileCheckY.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\pmm\\package.json","includedInParent":true,"mtime":1560952935180},{"name":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1561134727120},{"name":"./ProcessTileSeparationY","loc":{"line":7,"column":37},"parent":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\arcade\\tilemap\\TileCheckY.js","resolved":"C:\\Users\\Admin\\Desktop\\pmm\\node_modules\\phaser\\src\\physics\\arcade\\tilemap\\ProcessTileSeparationY.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar ProcessTileSeparationY = require('./ProcessTileSeparationY');\n\n/**\n * Check the body against the given tile on the Y axis.\n * Used internally by the SeparateTile function.\n *\n * @function Phaser.Physics.Arcade.Tilemap.TileCheckY\n * @since 3.0.0\n *\n * @param {Phaser.Physics.Arcade.Body} body - The Body object to separate.\n * @param {Phaser.Tilemaps.Tile} tile - The tile to check.\n * @param {number} tileTop - The top position of the tile within the tile world.\n * @param {number} tileBottom - The bottom position of the tile within the tile world.\n * @param {number} tileBias - The tile bias value. Populated by the `World.TILE_BIAS` constant.\n * @param {boolean} isLayer - Is this check coming from a TilemapLayer or an array of tiles?\n *\n * @return {number} The amount of separation that occurred.\n */\nvar TileCheckY = function (body, tile, tileTop, tileBottom, tileBias, isLayer)\n{\n    var oy = 0;\n\n    var faceTop = tile.faceTop;\n    var faceBottom = tile.faceBottom;\n    var collideUp = tile.collideUp;\n    var collideDown = tile.collideDown;\n\n    if (!isLayer)\n    {\n        faceTop = true;\n        faceBottom = true;\n        collideUp = true;\n        collideDown = true;\n    }\n\n    if (body.deltaY() < 0 && !body.blocked.up && collideDown && body.checkCollision.up)\n    {\n        //  Body is moving UP\n        if (faceBottom && body.y < tileBottom)\n        {\n            oy = body.y - tileBottom;\n\n            if (oy < -tileBias)\n            {\n                oy = 0;\n            }\n        }\n    }\n    else if (body.deltaY() > 0 && !body.blocked.down && collideUp && body.checkCollision.down)\n    {\n        //  Body is moving DOWN\n        if (faceTop && body.bottom > tileTop)\n        {\n            oy = body.bottom - tileTop;\n\n            if (oy > tileBias)\n            {\n                oy = 0;\n            }\n        }\n    }\n\n    if (oy !== 0)\n    {\n        if (body.customSeparateY)\n        {\n            body.overlapY = oy;\n        }\n        else\n        {\n            ProcessTileSeparationY(body, oy);\n        }\n    }\n\n    return oy;\n};\n\nmodule.exports = TileCheckY;\n"},"sourceMaps":null,"error":null,"hash":"20a809e29c32fdc0513c490a9eee772b","cacheData":{"env":{}}}